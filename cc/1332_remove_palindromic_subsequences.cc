// This is a personal academic project. Dear PVS-Studio, please check it.
// PVS-Studio Static Code Analyzer for C, C++, C#, and Java:
// https://pvs-studio.com
/*

You are given a string s consisting only of letters 'a' and 'b'. In a single
step you can remove one palindromic subsequence from s.

Return the minimum number of steps to make the given string empty.

A string is a subsequence of a given string if it is generated by deleting some
characters of a given string without changing its order. Note that a subsequence
does not necessarily need to be contiguous.

A string is called palindrome if is one that reads the same backward as well as
forward.

*/

#include <string>

#include "gtest/gtest.h"

using namespace std;

namespace {
class Solution {
   public:
    int RemovePalindromeSub(string s) {
        // pass
        int const end = s.length() - 1;
        for (int i = 0; end > i && i < (int)s.length(); i++) {
            if (s[i] != s[end - i]) return 2;
        }
        return 1;
    }
};

TEST(remove_palindromic_subsequences, t1) {
    string const s = "ababa";
    int const out = 1;
    // s is already a palindrome, so its entirety can be removed in a single
    // step.
    Solution sl;
    int const ret = sl.RemovePalindromeSub(s);
    EXPECT_EQ(ret, out);
}

TEST(remove_palindromic_subsequences, t2) {
    string const s = "abb";
    int const out = 2;
    //"abb" -> "bb" -> "". Remove palindromic subsequence "a" then "bb".
    Solution sl;
    int const ret = sl.RemovePalindromeSub(s);
    EXPECT_EQ(ret, out);
}

TEST(remove_palindromic_subsequences, t3) {
    string const s = "baabb";
    int const out = 2;
    // "baabb" -> "b" -> "". Remove palindromic subsequence "baab" then "b".
    Solution sl;
    int const ret = sl.RemovePalindromeSub(s);
    EXPECT_EQ(ret, out);
}

}  // namespace
