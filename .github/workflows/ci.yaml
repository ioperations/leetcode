name: leetcode.rs

# Run this workflow every time a new commit pushed to your repository
on:
  push:
  pull_request:
  schedule: [cron: "40 1 * * *"]

env:
  RUSTFLAGS: -Dwarnings

jobs:
  cc-test:
    name: cc test case
    runs-on: ubuntu-latest
    container: ${{ matrix.container }}
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@v3
      - run: sudo apt update && sudo apt install cmake build-essential libgtest-dev clang-12 -y
      - run: |
          git clone https://github.com/google/benchmark.git --depth 1
          cd benchmark
          cmake -E make_directory "build"
          cmake -E chdir "build" cmake -DBENCHMARK_DOWNLOAD_DEPENDENCIES=on -DCMAKE_BUILD_TYPE=Release ../
          sudo cmake --build "build" --config Release --target install
      - run: |
          cmake -B build && cmake --build build && make -C build test

  cargo-test:
    name: cargo test
    runs-on: ubuntu-latest
    container: ${{ matrix.container }}
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: rustfmt
      - run: cargo test --benches -j$(nproc)
      # - run: sudo apt update && sudo apt install linux-tools-common linux-tools-generic linux-tools-`uname -r` -y
      # - run: cargo install flamegraph
      # - name: create symlink
      #   run: sudo ln -f -s $HOME/.cargo/bin/* /usr/bin/
      # - name: rustup default nightly
      #   run: sudo rustup default nightly
      # - run: sudo cargo flamegraph --unit-test --
      # - name: flamegraph
      #   uses: "marvinpinto/action-automatic-releases@latest"
      #   with:
      #     repo_token: "${{ secrets.GITHUB_TOKEN }}"
      #     automatic_release_tag: "latest"
      #     prerelease: true
      #     title: "flame graph"
      #     files: |
      #       flamegraph.svg

  clippy-test:
    name: cargo clippy
    runs-on: ubuntu-latest
    container: ${{ matrix.container }}
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: clippy
      - run: |
          cargo clippy -- -Dclippy::pedantic  -Aclippy::cast-lossless -Aclippy::cast-possible-truncation -Aclippy::cast-possible-wrap -Aclippy::cast-precision-loss -Aclippy::cast-sign-loss -Aclippy::checked-conversions

  miri-test:
    name: cargo miri
    runs-on: ubuntu-latest
    container: ${{ matrix.container }}
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: miri
      - run: |
          MIRIFLAGS="-Zmiri-disable-isolation -Zmiri-ignore-leaks" cargo +nightly miri test -j$(nproc)  -- --skip classic::fibonacci_bench::tests::bench_actor --skip leetcode::leetcode_79_word_search::tests::case4_test --skip leetcode::leetcode_2405_optimal_partition_of_string::test

  rs-outdated:
    name: Outdated
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/install@cargo-outdated
      - run: cargo update
      - run: cargo outdated --workspace --exit-code 1
